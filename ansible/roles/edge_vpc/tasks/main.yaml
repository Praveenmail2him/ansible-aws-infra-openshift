---

###
# Create the VPC if it does not already exist
- name: Check if VPC already exists
  amazon.aws.ec2_vpc_net_info:
    profile: "{{awsProfile}}"
    region: "{{awsRegion|default(omit)}}"
    filters:
      "tag:Name": "{{resourceGroup|lower}}-{{edge|lower}}-vpc"
  register: returnedInfo

- name: Set exists if VPC found
  set_fact:
    vpcExists: True
  when: returnedInfo.vpcs|length > 0

- name: Set exists false if VPC not found
  set_fact:
    vpcExists: False
  when: returnedInfo.vpcs|length == 0

- name: Fail build if more than one VPC returned
  fail:
    msg: [
      "ERROR: Found more than one existing VPC with name {{resourceGroup|lower}}-{{edge|lower}}-vpc",
      "Please correct and retry"
    ]
  when: returnedInfo.vpcs|length > 1

- name: Set Edge VPC info to that already created
  set_fact:
    edgeVpc: "{{returnedInfo.vpcs[0]}}"
  when: vpcExists

- name: Create edge VPC
  import_role:
    name: create_vpc
  vars:
    # These variable are defined in the global_vars file
    envName: "{{resourceGroup|lower}}"
    vpcName: "{{resourceGroup|lower}}-{{edge|lower}}-vpc"
    usrProfile: "{{awsProfile}}"
    reqRegion: "{{awsRegion|default(omit)}}"
    # The cidr_block is obtained from the earlier subnet calcs - only create with egress CIDR
    cidr_block:
      - "{{inventory.edge.cidrs.ingress.cidr}}"
      - "{{inventory.edge.cidrs.bastion.cidr}}"
      - "{{inventory.edge.cidrs.egress.cidr}}"
  when: not vpcExists

- name: Set facts of created VPC
  set_fact:
    edgeVpc: "{{vpcData.vpc}}"
  when: not vpcExists

- name: Add VPC information to inventory
  set_fact:
    inventory: "{{inventory | combine({'edge':{'vpc':vpcDetails}}, recursive=True)}}"
  vars:
    vpcDetails: 
      name: "{{edgeVpc.tags.Name}}"
      cidr: 
        - "{{inventory.edge.cidrs.ingress.cidr}}"
        - "{{inventory.edge.cidrs.bastion.cidr}}"
        - "{{inventory.edge.cidrs.egress.cidr}}"
      id: "{{edgeVpc.id}}"
      state: "{{edgeVpc.state}}"
