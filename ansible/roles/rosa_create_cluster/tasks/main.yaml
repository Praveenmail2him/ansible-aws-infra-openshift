---

# Pass a dictionary, cluster, to this role. Cluster needs to contain,
# Name
# Region
# Compute nodes
# Multi-AZ - boolean. True to create a multi-AZ cluster. Defaults to false.


# Kick off cluster creation

- name: Clear variables
  set_fact:
    response_multi_az: []
    response_single_az: []
    response: []
    cluster_exists: "{{False if (not check_for_existence) else None}}"   # Assume cluster does not exist if told not to check

- pause:
    prompt: "Please advise account id"
  when: (accountid is not defined) or (accountid == '')
  register: response
  no_log: true

- name: Set accountid to user runtime provided
  set_fact:
    accountid: "{{response.user_input}}"
  when: (accountid is not defined) or (accountid == '')

- name: Set region to default if not specified
  set_fact:
    region: "{{ lookup('file', aws_config_path+'config') | regex_search('region = (.+)', '\\1') | first }}"
  when: region is not defined

- name: Query list of ROSA Clusters
  shell: |
    set timeout 300

    {{rosa_path}}rosa list clusters

    exit 0
  args:
    executable: /bin/bash
  delegate_to: localhost
  register: response
  when: check_for_existence

- name: Parse response for existing cluster
  set_fact: 
    cluster_exists: "{{True if (cluster_name in response.stdout) else False}}"
  when: check_for_existence

- name: Kick off multi-availability zone cluster creation
  shell: |
    set timeout 300

    {{rosa_path}}rosa create cluster \
    --cluster-name {{cluster_name}} \
    --machine-cidr {{machine_cidr}} \
    --multi-az \
    --compute-nodes {{compute_nodes}} \
    --region {{region}} \
    --profile {{profile}} \
    --role-arn arn:aws:iam::{{accountid}}:role/ManagedOpenShift-Installer-Role \
    --support-role-arn arn:aws:iam::{{accountid}}:role/ManagedOpenShift-Installer-Role \
    --controlplane-iam-role arn:aws:iam::{{accountid}}:role/ManagedOpenShift-ControlPlane-Role \
    --worker-iam-role arn:aws:iam::{{accountid}}:role/ManagedOpenShift-Worker-Role

    exit 0
  args:
    executable: /bin/bash
  delegate_to: localhost
  register: response_multi_az
  when: multi_az and not cluster_exists


- name: Kick off single availability zone cluster creation
  shell: |
    set timeout 300

    {{rosa_path}}rosa create cluster \
    --cluster-name {{cluster_name}} \
    --machine-cidr {{machine_cidr}} \
    --compute-nodes {{compute_nodes}} \
    --region {{region}} \
    --profile {{profile}} \
    --role-arn arn:aws:iam::{{accountid}}:role/ManagedOpenShift-Installer-Role \
    --support-role-arn arn:aws:iam::{{accountid}}:role/ManagedOpenShift-Installer-Role \
    --controlplane-iam-role arn:aws:iam::{{accountid}}:role/ManagedOpenShift-ControlPlane-Role \
    --worker-iam-role arn:aws:iam::{{accountid}}:role/ManagedOpenShift-Worker-Role

    exit 0
  args:
    executable: /bin/bash
  delegate_to: localhost
  register: response_single_az
  when: not multi_az and not cluster_exists

- name: Set response to multi-az if creating multi-az cluster
  set_fact:
    response: "{{response_multi_az}}"
  when: multi_az

- name: Set response to single-az if creating single-az cluster
  set_fact:
    response: "{{response_single_az}}"
  when: not multi_az

- name: Create management roles
  include_tasks:
    file: role_creation.yaml

- name: Wait for cluster completion
  include_tasks:
    file: wait.yaml
  when: wait_for_completion

