---

# Create peering connection between edge and management VPC 

- set_fact:
    createPCX: False

- name: Set parameters for edge to management
  set_fact:
    inventory: "{{inventory | combine( {'pcxs':{'edge_mgmt':{'name': name, 'vpc1':vpc1, 'vpc2':vpc2}}}, recursive=True ) }}"
    createPCX: True
  vars:
    name: "{{inventory.resource}}-{{inventory.edge.identifier}}-{{inventory.mgmt.identifier}}-pcx"
    vpc1: "{{inventory.edge.vpc.name}}"
    vpc2: "{{inventory.mgmt.vpc.name}}"
  when: >
    ((inventory.edge is defined) and (inventory.edge | length > 0)) and
    ((inventory.mgmt is defined) and (inventory.mgmt | length > 0)) and
    ((inventory.pcxs.edge_mgmt is not defined) or (inventory.pcxs.edge_mgmt | length == 0))

- name: Create VPC Peer Connection Edge to Management
  include_role:
    name: create_pcx
  vars:
    pcxName: "{{inventory.pcxs.edge_mgmt.name}}"
    vpc1Name: "{{inventory.edge.vpc.name}}"
    vpc2Name: "{{inventory.mgmt.vpc.name}}"
    envName: "{{inventory.resource}}"
  when: createPCX

- name: Amend pcxId to list for vpc1
  set_fact:
    inventory: "{{inventory | combine({'pcxs':{'edge_mgmt':{'id': peering_id}}}, recursive=True)}}"
  when: createPCX


# Create peering connection between edge and workload VPC 

- set_fact:
    createPCX: False

- name: Set parameters for edge to workload
  set_fact:
    inventory: "{{inventory | combine( {'pcxs':{'edge_wkld':{'name': name, 'vpc1':vpc1, 'vpc2':vpc2}}}, recursive=True ) }}"
    createPCX: True
  vars:
    name: "{{inventory.resource}}-{{inventory.edge.identifier}}-{{inventory.wkld.identifier}}-pcx"
    vpc1: "{{inventory.edge.vpc.name}}"
    vpc2: "{{inventory.wkld.vpc.name}}"
  when: >
    ((inventory.edge is defined) and (inventory.edge | length > 0)) and
    ((inventory.wkld is defined) and (inventory.wkld | length > 0)) and
    ((inventory.pcxs.edge_wkld is not defined) or (inventory.pcxs.edge_wkld | length == 0))

- name: Create VPC Peer Connection Edge to Workload
  include_role:
    name: create_pcx
  vars:
    pcxName: "{{inventory.pcxs.edge_wkld.name}}"
    vpc1Name: "{{inventory.edge.vpc.name}}"
    vpc2Name: "{{inventory.wkld.vpc.name}}"
    envName: "{{inventory.resource}}"
  when: createPCX

- name: Add pcxId to second entry
  set_fact:
    inventory: "{{inventory | combine({'pcxs':{'edge_wkld':{'id': peering_id}}}, recursive=True)}}"
  when: createPCX

# Create peering connection between management and workload VPC 

- set_fact:
    createPCX: False

- name: Set parameters for management to workload
  set_fact:
    inventory: "{{inventory | combine( {'pcxs':{'edge_wkld':{'name': name, 'vpc1':vpc1, 'vpc2':vpc2}}}, recursive=True ) }}"
    createPCX: True
  vars:
    name: "{{inventory.resource}}-{{inventory.mgmt.identifier}}-{{inventory.wkld.identifier}}-pcx"
    vpc1: "{{inventory.mgmt.vpc.name}}"
    vpc2: "{{inventory.wkld.vpc.name}}"
  when: >
    ((inventory.mgmt is defined) and (inventory.mgmt | length > 0)) and
    ((inventory.wkld is defined) and (inventory.wkld | length > 0)) and
    ((inventory.pcxs.mgmt_wkld is not defined) or (inventory.pcxs.mgmt_wkld | length == 0))

- name: Create VPC Peer Connection Edge to Workload
  include_role:
    name: create_pcx
  vars:
    pcxName: "{{inventory.pcxs.edge_wkld.name}}"
    vpc1Name: "{{inventory.mgmt.vpc.name}}"
    vpc2Name: "{{inventory.wkld.vpc.name}}"
    envName: "{{inventory.resource}}"
  when: createPCX

- name: Add pcxId to second entry
  set_fact:
    inventory: "{{inventory | combine({'pcxs':{'mgmt_wkld':{'id': peering_id}}}, recursive=True)}}"
  when: createPCX
