---

- name: Get details of current route table
  shell: |
    set timeout 300

    {{aws_path}}aws ec2 describe-transit-gateway-route-tables \
    --filters Name=transit-gateway-id,Values={{inventory.tgw.id}}
     
    exit 0
  args:
    executable: /bin/bash
  delegate_to: localhost
  register: returnedInfo
  failed_when: returnedInfo.stderr | length > 0

- name: Set fact with response
  set_fact:
    rtbQuery: "{{returnedInfo.stdout | from_json}}"

- name: Fail if no route table exists or more than one route table
  fail:
    msg: "{{ERROR: No default route table found for transit gateway {{inventory.tgw.id}}}}"
  when: rtbQuery | length != 1

- name: Parse output for route table id details
  set_fact:
    inventory: "{{inventory | combine({'tgw':{'rtb':{'id':rtbId,'name':name}}}, recursive=True) }}"
    routeExists: "{{True if(rtbQuery.TransitGatewayRouteTables[0].Tags.Name is defined) else False}}"
  vars:
    rtbId: "{{rtbQuery.TransitGatewayRouteTables[0].TransitGatewayRouteTableId}}"
    name: "{{inventory.resource}}-tgw-rtb"

- name: Create static route to edge VPC in route table
  shell: |
    set timeout 300

    {{aws_path}}aws ec2 create-transit-gateway-route \
    --profile {{inventory.profile}} \
    --destination-cidr-block 0.0.0.0/0 \
    --transit-gateway-route-table-id {{inventory.tgw.rtb.id}} \
    --transit-gateway-attachment-id {{inventory.tgw.edge.id}}

    exit 0
  args:
    executable: /bin/bash
  delegate_to: localhost
  register: returnedInfo
  when: (inventory.tgw.rtb.id is defined) and (inventory.tgw.edge.id is defined) and (inventory.tgw.routes is not defined) and (not routeExists)
  failed_when: returnedInfo.stderr | length > 0

- name: Add tags to transit gateway route table
  shell: |
    set timeout 300

    {{aws_path}}aws ec2 create-tags \
    --resources {{inventory.tgw.rtb.id}} \
    --tags Key=Name,Value="{{inventory.tgw.rtb.name}}" Key=Resource,Value="{{inventory.resource}}"

    exit 0
  args:
    executable: /bin/bash
  delegate_to: localhost
  register: returnedInfo
  when: (inventory.tgw.rtb.id is defined) and (inventory.tgw.edge.id is defined) and (inventory.tgw.routes is not defined) and (not routeExists)
  failed_when: returnedInfo.stderr | length > 0

- name: Build list of routes to create - edge VPC routes
  set_fact:
    routeList: 
      - dest: 0.0.0.0/0
        route: "{{inventory.tgw.edge.id}}"
      - dest: "{{inventory.edge.vpc.cidr}}"
        route: "{{inventory.tgw.edge.id}}"
      - dest: "{{inventory.mgmt.vpc.cidr}}"
        route: "{{inventory.tgw.mgmt.id}}"
      - dest: "{{inventory.wkld.vpc.cidr}}"
        route: "{{inventory.tgw.wkld.id}}"

- name: Add route to inventory
  set_fact:
    inventory: "{{inventory | combine({'tgw':{'routes':routeList}}, recursive=True)}}"
